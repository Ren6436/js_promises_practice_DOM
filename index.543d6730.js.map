{"mappings":"ACEA,IAAI,EAAS,CAAA,EACT,EAAU,CAAA,EAEd,SAAS,EAAK,CAAO,CAAE,CAAS,EAC9B,IAAM,EAAc,SAAS,aAAa,CAAC,MAE3C,CAAA,EAAY,SAAS,CAAG,EACxB,EAAY,WAAW,CAAG,EAC1B,EAAY,OAAO,CAAC,EAAE,CAAG,eACzB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,IAAM,EAAc,SAAC,CAArB,EACmB,IAAb,EAAE,MAAM,GACV,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACT,EAAO,AAAI,MAAM,+BACjB,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAEM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,IAAM,EAAc,SAAC,CAArB,EACM,CAAA,AAAa,IAAb,EAAE,MAAM,EAAU,AAAa,IAAb,EAAE,MAAM,AAAK,IACjC,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,IAAM,EAAc,SAAC,CAArB,EACM,AAAa,IAAb,EAAE,MAAM,CACV,EAAS,CAAA,EACa,IAAb,EAAE,MAAM,EACjB,CAAA,EAAU,CAAA,CADL,EAIH,GAAU,IACZ,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEA,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAK,EAAS,UAChC,GAAA,KAAK,CAAC,SAAC,CAAP,EAAiB,OAAA,EAAK,EAAM,OAAO,CAAE,Q,GAExC,EAAS,IAAI,CAAC,SAAC,CAAf,EAA2B,OAAA,EAAK,EAAS,U,GACzC,EAAS,IAAI,CAAC,SAAC,CAAf,EAA2B,OAAA,EAAK,EAAS,U","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar leftbt = false;\nvar rightbt = false;\nfunction appM(message, className) {\n    var messageElem = document.createElement(\"div\");\n    messageElem.className = className;\n    messageElem.textContent = message;\n    messageElem.dataset.qa = \"notification\";\n    document.body.appendChild(messageElem);\n}\nvar promise1 = new Promise(function(resolve, reject) {\n    var handleClick = function(e) {\n        if (e.button === 0) {\n            resolve(\"First promise was resolved\");\n            document.removeEventListener(\"click\", handleClick); // Видалити обробник\n        }\n    };\n    document.addEventListener(\"click\", handleClick);\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n        document.removeEventListener(\"click\", handleClick);\n    }, 3000);\n});\nvar promise2 = new Promise(function(resolve) {\n    var handleClick = function(e) {\n        if (e.button === 0 || e.button === 2) {\n            resolve(\"Second promise was resolved\");\n            document.removeEventListener(\"click\", handleClick);\n            document.removeEventListener(\"contextmenu\", handleClick);\n        }\n    };\n    document.addEventListener(\"click\", handleClick);\n    document.addEventListener(\"contextmenu\", handleClick);\n});\nvar promise3 = new Promise(function(resolve) {\n    var handleClick = function(e) {\n        if (e.button === 0) leftbt = true;\n        else if (e.button === 2) rightbt = true;\n        if (leftbt && rightbt) {\n            resolve(\"Third promise was resolved\");\n            document.removeEventListener(\"click\", handleClick);\n            document.removeEventListener(\"contextmenu\", handleClick);\n        }\n    };\n    document.addEventListener(\"click\", handleClick);\n    document.addEventListener(\"contextmenu\", handleClick);\n});\npromise1.then(function(message) {\n    return appM(message, \"success\");\n}).catch(function(error) {\n    return appM(error.message, \"error\");\n});\npromise2.then(function(message) {\n    return appM(message, \"success\");\n});\npromise3.then(function(message) {\n    return appM(message, \"success\");\n});\n\n//# sourceMappingURL=index.543d6730.js.map\n","'use strict';\n\nlet leftbt = false;\nlet rightbt = false;\n\nfunction appM(message, className) {\n  const messageElem = document.createElement('div');\n\n  messageElem.className = className;\n  messageElem.textContent = message;\n  messageElem.dataset.qa = 'notification';\n  document.body.appendChild(messageElem);\n}\n\nconst promise1 = new Promise((resolve, reject) => {\n  const handleClick = (e) => {\n    if (e.button === 0) {\n      resolve('First promise was resolved');\n      document.removeEventListener('click', handleClick); // Видалити обробник\n    }\n  };\n\n  document.addEventListener('click', handleClick);\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n    document.removeEventListener('click', handleClick);\n  }, 3000);\n});\n\nconst promise2 = new Promise((resolve) => {\n  const handleClick = (e) => {\n    if (e.button === 0 || e.button === 2) {\n      resolve('Second promise was resolved');\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('contextmenu', handleClick);\n    }\n  };\n\n  document.addEventListener('click', handleClick);\n  document.addEventListener('contextmenu', handleClick);\n});\n\nconst promise3 = new Promise((resolve) => {\n  const handleClick = (e) => {\n    if (e.button === 0) {\n      leftbt = true;\n    } else if (e.button === 2) {\n      rightbt = true;\n    }\n\n    if (leftbt && rightbt) {\n      resolve('Third promise was resolved');\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('contextmenu', handleClick);\n    }\n  };\n\n  document.addEventListener('click', handleClick);\n  document.addEventListener('contextmenu', handleClick);\n});\n\npromise1\n  .then((message) => appM(message, 'success'))\n  .catch((error) => appM(error.message, 'error'));\n\npromise2.then((message) => appM(message, 'success'));\npromise3.then((message) => appM(message, 'success'));\n"],"names":["leftbt","rightbt","appM","message","className","messageElem","document","createElement","textContent","dataset","qa","body","appendChild","promise1","Promise","resolve","reject","handleClick","e","button","removeEventListener","addEventListener","setTimeout","Error","promise2","promise3","then","catch","error"],"version":3,"file":"index.543d6730.js.map"}